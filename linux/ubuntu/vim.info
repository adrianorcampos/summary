## 删除偶数行的方法如下：
	
:g/^/+1 d

上面用到了:gbobal命令，gbobal命令格式如下：
	
:[range]global/{pattern}/{command}

global命令实际上是分成两步执行：首先扫描[range]指定范围内的所有行，给匹配{pattern}的行打上标记；然后依次对打有标记的行执行{command}命令，
如果被标记的行在对之前匹配行的命令操作中被删除、移动或合并，则其标记自动消失，而不对该行执行{command}命令。{command}可以是一个ex命令，
也可以是用|分隔的多个ex命令，这样我们就可以对被标记行，或从标记行寻址到的行进行多种不同的操作。

上面删除偶数行的命令，先匹配所有行，然后隔行删除（其中+1用以定位于当前行的下一行）。为什么是隔行呢？因为在对第一行执行+1 d命令时删除的是第二行，
而第二行虽然也被标记了，但已不存在了，因此不会执行删除第三行的命令。

删除几数行的命令如下：

	
:g/^/d|m

其中m的作用是移出偶数行的标记，防止偶数行也被删除。

另外删除几数行偶数行，也可以用normal命令，分别为（第一个命令为几数行）：

	
:%norm jkdd
:%norm jdd



Linux 的字符串截取很有用。有八种方法。

假设有变量 var=http://www.aaa.com/123.htm.

1. # 号截取，删除左边字符，保留右边字符。

复制代码 代码如下:

echo ${var#*//}

其中 var 是变量名，# 号是运算符，*// 表示从左边开始删除第一个 // 号及左边的所有字符
即删除 http://
结果是 ：www.aaa.com/123.htm

2. ## 号截取，删除左边字符，保留右边字符。

复制代码 代码如下:

echo ${var##*/}

##*/ 表示从左边开始删除最后（最右边）一个 / 号及左边的所有字符
即删除 http://www.aaa.com/

结果是 123.htm

3. %号截取，删除右边字符，保留左边字符

复制代码 代码如下:

echo ${var%/*}

%/* 表示从右边开始，删除第一个 / 号及右边的字符

结果是：http://www.aaa.com

4. %% 号截取，删除右边字符，保留左边字符

复制代码 代码如下:

echo ${var%%/*}

%%/* 表示从右边开始，删除最后（最左边）一个 / 号及右边的字符
结果是：http:

5. 从左边第几个字符开始，及字符的个数

复制代码 代码如下:

echo ${var:0:5}

其中的 0 表示左边第一个字符开始，5 表示字符的总个数。
结果是：http:

6. 从左边第几个字符开始，一直到结束。

复制代码 代码如下:

echo ${var:7}

其中的 7 表示左边第8个字符开始，一直到结束。
结果是 ：www.aaa.com/123.htm

7. 从右边第几个字符开始，及字符的个数

复制代码 代码如下:

echo ${var:0-7:3}

其中的 0-7 表示右边算起第七个字符开始，3 表示字符的个数。
结果是：123

8. 从右边第几个字符开始，一直到结束。

复制代码 代码如下:

echo ${var:0-7}

表示从右边第七个字符开始，一直到结束。
结果是：123.htm

注：（左边的第一个字符是用 0 表示，右边的第一个字符用 0-1 表示）
